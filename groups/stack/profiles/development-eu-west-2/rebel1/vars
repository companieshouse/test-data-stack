aws_bucket = "development-eu-west-2.terraform-state.ch.gov.uk"
remote_state_bucket = "ch-development-terraform-state-london"
environment = "rebel1"
deploy_to = "development"
state_prefix = "env:/development"
aws_profile = "development-eu-west-2"

# Certificate for https access through ALB
# TODO: Find and update the certificate ARN for rebel1
ssl_certificate_id = "arn:aws:acm:eu-west-2:169942020521:certificate/8d7db053-7416-4e56-946b-762d0a34c899"
zone_id = "Z2KSI4Z5ZN9NT0"
external_top_level_domain = ".rebel1.aws.chdev.org"
internal_top_level_domain = "-rebel1.development.aws.internal"

ec2_key_pair_name = "chs-rebel1"

# shared configs
log_level = "TRACE"

# eric configs
eric_cache_url = "cidev-chs-elasticache.9vgugg.ng.0001.euw2.cache.amazonaws.com:6379"

# chips filing mock configs
# TODO: Determine how you make be below url and broker address available for this to work]
chs_kafka_api_url = "http://internal-rebel1-chs-kafka-api-1268545499.eu-west-2.elb.amazonaws.com"
kafka_broker_address = "kafka-broker1-rebel1.development.aws.internal:9092"

# instances of chips filing mock service to run - set to 0 to turn the service off in rebel1 during normal
# testing to avoid duplicate emails and confusion for scrum teams.
# set back to 1 temporarily to test this service in rebel1 but remember to set to 0 again afterwards!
chips_filing_mock_desired_count = 0

# test data generator elastic search configs
elastic_search_deployed = true
